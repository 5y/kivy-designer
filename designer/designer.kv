#:kivy 1.4.1

<Playground>:
    root: root_widget
    do_scale: False
    do_rotation: False
    size_hint: None, None
    size: 640, 480
    pos: 155, 60
    auto_bring_to_front: False
    canvas:
        Color:
            rgb: 1, 1, 1
        Line:
            points: [0, 0, self.width, 0, self.width, self.height, 0, self.height]
            width: 2.
            close: True

    FloatLayout:
        id: root_widget
        size: root.size

<PlaygroundDragElement>:
    size_hint: None, None
    size: 100, 100
    canvas:
        Color:
            rgb: (0.9, 0.9, 0.9) if self.can_place else (0.9, 0.1, 0.1)
        Line:
            points: [self.x, self.y, self.center_x - 20, self.y, self.center_x, self.y - 20, self.center_x + 20, self.y, self.right, self.y, self.right, self.top, self.x, self.top]
            close: True
            width: 2.

    on_target: app.focus_widget(args[1])

<Toolbox>:
    widgets_list: widgets_list
    size_hint: None, 1
    width: 150

    canvas:
        Color:
            rgb: 0.1, 0.1, 0.1
        Rectangle:
            pos: self.pos
            size: self.size

    ScrollView:
        do_scroll_x: False
        GridLayout:
            id: widgets_list
            cols: 1
            size_hint_y: None
            height: self.minimum_height

<ToolboxCategory>:
    bold: True
    size_hint_y: None
    height: '22pt'

<ToolboxButton>:
    size_hint_y: None
    height: '22pt'
    on_press_and_touch: app.create_draggable_element(self.text, args[1])

<StatusBar>:
    canvas:
        Color:
            rgb: 0.1, 0.1, 0.1
        Rectangle:
            pos: self.pos
            size: self.size
    size_hint_y: None
    height: '20pt'

    Label:
        text: repr(app.widget_focused)
        font_size: '10pt'

<PropertyViewer>:
    size_hint: None, .5
    width: 250
    pos_hint: {'right': 1, 'y': 0}
    do_scroll_x: False
    prop_list: prop_list

    canvas:
        Color:
            rgb: 0.1, 0.1, 0.1
        Rectangle:
            pos: self.pos
            size: self.size

    GridLayout:
        id: prop_list
        cols: 1
        size_hint_y: None
        height: self.minimum_height

<PropertyLabel>:
    size_hint_y: None
    height: '20pt'
    font_size: '10pt'

<PropertyBase>:
    size_hint_y: None
    height: '32pt'
    propvalue: getattr(self.propwidget, self.propname)

    canvas.after:
        Color:
            rgba: .9, .1, .1, (1 if self.have_error else 0)
        Line:
            points: [self.x, self.y, self.right, self.y, self.right, self.top, self.x, self.top]
            close: True
            width: 2

<PropertyTextInput>:
    text: str(getattr(self.propwidget, self.propname))
    on_text: self.set_value(args[1])

<PropertyBoolean>:
    active: getattr(self.propwidget, self.propname)
    on_active: self.set_value(args[1])

<WidgetsTree>:
    pos_hint: {'right': 1, 'top': 1}
    size_hint: None, .5
    do_scroll_x: False
    width: 250
    tree: tree
    canvas:
        Color:
            rgba: .5, .5, .5, 1
        Rectangle:
            pos: root.pos
            size: root.size

    TreeView:
        id: tree
        height: 1000
        size_hint_y: None

<TreeViewButton>:
    size_hint: None, 1
    height: label.texture_size[1]
    is_open: True

    Button:
        id: label
        text: str(root.node)
        text_size: self.width, None
        on_press: root.focus()

    Button:
        id: delete
        text: 'x'
        on_press: root.remove()
        size_hint_x: None
        width: '1em'
