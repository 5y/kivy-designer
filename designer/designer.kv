#:kivy 1.4.1
#:set bgcolor (.06, .07, .08)
#:set bordercolor (.54, .59, .60)
#:set titlecolor (.34, .39, .40)
#:import KivyLexer kivy.extras.highlight.KivyLexer

<Placeholder>:
    canvas:
        Color:
            rgb: 1, 0.5, 0.8
        
        Line:
            points: self.x - 2, self.y - 2, self.right - 2, self.y - 2, self.right - 2, self.top - 2, self.x - 2, self.top - 2
            width: 2.
            close: True

<PyScrollView>:
    id: scroll
    code_input: code_input
    PyCodeInput:
        id: code_input
        size_hint_y: None
        height: max(scroll.height, (len(self._lines)+1) * (self.line_height + self._line_spacing))

<AddFileDialog>:
    text_file: text_file
    text_folder: text_folder
    always_check: always_check
    orientation: 'vertical'

    Label:
        text: 'File:'
        size_hint_x: None
        width: '20pt'

    BoxLayout:
        size_hint_y: None
        height: '24pt'
        TextInput:
            id: text_file
            multiline: False
            on_text: root.update_from_file()
        Button:
            size_hint_x: None
            text: 'Open File'
            on_press: root.open_file_btn_pressed()
            
    Label:
        text: 'Add File to:'
        size_hint_x: None
        width: '55pt'

    BoxLayout:
        size_hint_y: None
        height: '24pt'
        TextInput:
            id: text_folder
            multiline: False
        Button:
            size_hint_x: None
            text: 'Open Folder'
            on_press: root.open_folder_btn_pressed()

    BoxLayout:
        CheckBox:
            id: always_check
            width: '20sp'
            size_hint_x: None
        Label:
            width: '120pt'
            size_hint_x: None
            text: 'Always use this folder'

    BoxLayout:
        padding: '2sp'
        Button:
            text: 'Add'
            on_press: root._perform_add_file()
        Button:
            text: 'Cancel'
            on_press: root.dispatch('on_cancel')

<KVLangArea>:
    auto_indent: True
    lexer: KivyLexer()
    canvas.after:
        Color:
            rgba: .9, .1, .1, (1 if self.have_error else 0)
        Line:
            points: [self.x, self.y, self.right, self.y, self.right, self.top, self.x, self.top]
            close: True
            width: 2

<SelectClass>:
    select_button: select
    cancel_button: cancel
    orientation: 'vertical'
    padding: '2sp'
    
    GridLayout:
        rows: 1
        size_hint_y: None
        height: '25pt'
        padding: '4sp'
        Button:
            id: select
            text: 'Select Class'
            size_hint_x: None
            width: '90pt'
        Button:
            id: cancel
            text: 'Cancel'
            size_hint_x: None
            width: '90pt'

<RecentDialog>:
    select_button: select
    cancel_button: cancel
    orientation: 'vertical'
    padding: '2sp'
    
    GridLayout:
        rows: 1
        size_hint_y: None
        height: '25pt'
        padding: '4sp'
        Button:
            id: select
            text: 'Open'
            size_hint_x: None
            width: '90pt'
        Button:
            id: cancel
            text: 'Cancel'
            size_hint_x: None
            width: '90pt'

<ConfirmationDialog>:
    orientation: 'vertical'
    padding: '5sp'
    Label:
        text: root.message
    
    BoxLayout:
        size_hint_y: None
        height: '25pt'
        Button:
            text: 'Yes'
            on_press: root.dispatch('on_ok')
        Button:
            text: 'No'
            on_press: root.dispatch('on_cancel')
    
<ActionCheckButton>:
    orientation: 'horizontal'
    background_normal: 'atlas://data/images/defaulttheme/action_bar'
    canvas.before:
        Color:
            rgba: 1,1,1,1
        Rectangle:
            pos: self.pos
            size: self.size
            source: self.background_normal

<EditContView>:
    ActionPrevious:
        title: "Edit"
        width: 100
        with_previous: True
    ActionOverflow:
    ActionButton:
        text: 'Undo'
        on_press: root.dispatch('on_undo')
    ActionButton:
        text: 'Redo'
        on_press: root.dispatch('on_redo')
    ActionButton:
        text: 'Cut'
        on_press: root.dispatch('on_cut')
    ActionButton:
        text: 'Copy'
        on_press: root.dispatch('on_copy')
    ActionButton:
        text: 'Paste'
        on_press: root.dispatch('on_paste')
    ActionButton:
        text: 'Select All'
        on_press: root.dispatch('on_selectall')
    ActionButton:
        text: 'Delete'
        on_press: root.dispatch('on_delete')
    ActionButton:
        text: 'Add Custom Widget'
        on_press: root.dispatch('on_add_custom')

<Playground>:
    do_scale: False
    do_rotation: False
    size_hint: None, None
    size: 550, 350
    pos: 300, 230
    auto_bring_to_front: False
    canvas:
        Color:
            rgb: 1, 1, 1
        Line:
            points: [0, 0, self.width, 0, self.width, self.height, 0, self.height]
            width: 2.
            close: True

<PlaygroundDragElement>:
    size_hint: None, None
    size: 100, 100
    canvas:
        Color:
            rgb: (0.9, 0.9, 0.9) if self.can_place else (0.9, 0.1, 0.1)
        Line:
            points: [self.x, self.y, self.center_x - 20, self.y, self.center_x, self.y - 20, self.center_x + 20, self.y, self.right, self.y, self.right, self.top, self.x, self.top]
            close: True
            width: 2.

    on_target: app.focus_widget(args[1])

<Toolbox>:
    accordion: accordion
    Accordion:
        id: accordion
        orientation: 'vertical'
        pos: root.pos
        size_hint_y: None
        height: root.height

<ToolboxCategory>:
    gridlayout: gridlayout
    size_hint_y: None
    height: '22pt'
    title: self.title[0].upper() + self.title[1:]
    ScrollView:
        pos: root.pos
        GridLayout:
            id: gridlayout
            cols: 1
            orientation: 'vertical'
            padding: '5sp'
            spacing: '3sp'
            size_hint_y: None
            size: root.size
            height: self.minimum_height
    
<ToolboxButton>:
    size_hint_y: None
    height: '22pt'
    font_size: '10pt'
    on_press_and_touch: app.create_draggable_element(self.text, args[1])

<StatusBar>:
    app: app
    navbar: navbar
    gridlayout: gridlayout
    canvas:
        Color:
            rgb: bordercolor
        Rectangle:
            pos: self.x, self.top - 0.5
            size: self.width, 1
        Color:
            rgb: bgcolor
        Rectangle:
            pos: self.pos
            size: self.size

    GridLayout:
        id: gridlayout
        rows: 1
        GridLayout:
            rows: 1
            id: navbar
        BoxLayout:
            size_hint_x: None
            width: '44pt'

<StatusNavBarButton>:
    text: getattr(root.node, '__class__').__name__
    font_size: '10pt'
    width: self.texture_size[0] + 20
    size_hint_x: None
    on_release: app.focus_widget(root.node)

<StatusNavBarSeparator>:
    text: '>'
    font_size: '10pt'
    width: self.texture_size[0] + 20
    size_hint_x: None

<PropertyViewer>:
    do_scroll_x: False
    prop_list: prop_list

    canvas:
        Color:
            rgb: bgcolor
        Rectangle:
            pos: self.pos
            size: self.size

    GridLayout:
        id: prop_list
        cols: 2
        padding: 3
        size_hint_y: None
        height: self.minimum_height
        row_default_height: '25pt'

<PropertyLabel>:
    font_size: '10pt'
    valign: 'middle'
    size_hint_x: None
    width: max(100, self.texture_size[0] + 10)

<PropertyBase>:
    propvalue: getattr(self.propwidget, self.propname)
    padding: '6pt', '6pt'

    canvas.after:
        Color:
            rgba: .9, .1, .1, (1 if self.have_error else 0)
        Line:
            points: [self.x, self.y, self.right, self.y, self.right, self.top, self.x, self.top]
            close: True
            width: 2

<PropertyTextInput>:
    border: 8, 8, 8, 8
    text: str(getattr(self.propwidget, self.propname))
    on_text: self.set_value(args[1])

<PropertyBoolean>:
    on_active: self.set_value(args[1])
    active: bool(getattr(self.propwidget, self.propname))

<WidgetsTree>:
    do_scroll_x: False
    tree: tree
    canvas:
        Color:
            rgb: bgcolor
        Rectangle:
            pos: root.pos
            size: root.size

    TreeView:
        id: tree
        height: self.minimum_height
        size_hint_y: None
        hide_root: True
        on_selected_node: app.focus_widget(args[1].node)

<WidgetTreeElement>:
    is_open: True
    text: getattr(root.node, '__class__').__name__
    font_size: '10pt'

<UICreator>:
    kv_code_input: code_input
    splitter_kv_code_input: splitter_kv
    grid_widget_tree: grid_widget_tree
    splitter_property: splitter_property
    splitter_widget_tree: splitter_widget_tree
    propertyviewer: propertyviewer
    playground: playground
    widgettree: widgettree
    error_console: error_console
    kivy_console: kivy_console
    tab_pannel: tab_pannel

    GridLayout:
        height: root.height
        pos: root.pos
        cols: 1
        splitter_widget_tree: splitter_widget_tree

        FloatLayout:
            size_hint: 1,1
            canvas:
                Color:
                    rgb: .21, .22, .22
                Rectangle:
                    pos: self.pos
                    size: self.size

            Playground:
                id: playground
                canvas.before:
                    Color:
                        rgb: 0, 0, 0
                    Rectangle:
                        size: self.size
                on_show_edit: root.on_show_edit()

            Splitter:
                id: splitter_kv
                sizable_from: 'top'
                size_hint_y: None
                size_hint_x: None
                height: 200
                min_size: 150
                max_size: 500
                x: root.x
                width: root.width - splitter_widget_tree.width
                y: root.y
                
                DesignerTabbedPanel:
                    id: tab_pannel
                    do_default_tab: False
                    DesignerTabbedPanelItem:
                        text: 'KV Lang Area'
                        BoxLayout:
                            orientation: 'vertical'
                            ScrollView:
                                id: scroll
                                KVLangArea:
                                    id: code_input
                                    size_hint_y: None
                                    height: max(scroll.height, (len(self._lines)+1) * (self.line_height + self._line_spacing))
                                    on_show_edit: root.on_show_edit()
                            
                            Button:
                                size_hint_y: None
                                size_hint_x: 0.1
                                height: '22pt'
                                text: 'Reload'
                                pos_hint: {'x': 0.9}
                                on_release: root.reload_btn_pressed()
                                
                    
                    DesignerTabbedPanelItem:
                        text: 'Kivy Console'
                        KivyConsole:
                            id: kivy_console
        
                    DesignerTabbedPanelItem:
                        text: 'Error Console'
                        ScrollView:
                            id: e_scroll
                            CodeInput:
                                id: error_console
                                size_hint_y: None
                                height: max(e_scroll.height, (len(self._lines)+1) * (self.line_height + self._line_spacing))
                                text: ''
   
            Splitter:
                id: splitter_widget_tree
                size_hint_x: None
                min_size: 170
                width: 250
                pos_hint: {'y': 0, 'right': 1}
                GridLayout:
                    cols: 1
                    spacing: .5

                    canvas:
                        Color:
                            rgb: titlecolor
                        Rectangle:
                            pos: self.pos
                            size: self.size

                    GridLayout:
                        id: grid_widget_tree
                        cols: 1
                        spacing: .5
                        Label:
                            text: 'Widget Navigator'
                            font_size: '10pt'
                            height: '20pt'
                            size_hint_y: None

                        WidgetsTree:
                            id: widgettree
                            playground: playground

                    Splitter:
                        id: splitter_property
                        sizable_from: 'top'
                        size_hint_y: None
                        height: 300
                        max_size: 500
                        BoxLayout:
                            orientation: 'vertical'
                            Label:
                                text: 'Property Navigator'
                                font_size: '10pt'
                                height: '20pt'
                                size_hint_y: None

                            PropertyViewer:
                                id: propertyviewer

<DesignerContent>:
    ui_creator: ui_creator
    tree_view: tree_view
    tab_pannel: tab_panel
    toolbox: toolbox
    splitter_tree: splitter_tree
    tree_toolbox_tab_panel: tree_toolbox_tab_panel

    DesignerTabbedPanel:
        id: tab_panel
        size_hint: None, None
        height: root.height
        y: root.y
        x: splitter_tree.width
        width: root.width - splitter_tree.width
        do_default_tab: False

        DesignerTabbedPanelItem:
            text: 'UI Creator'
            UICreator:
                id: ui_creator

    Splitter:
        id: splitter_tree
        pos: root.pos
        size_hint_x: None
        sizable_from: 'right'
        min_size: 220
        width: 220
        DesignerTabbedPanel:
            id: tree_toolbox_tab_panel
            do_default_tab: False
            DesignerTabbedPanelItem:
                text: 'Project Tree'
                TreeView:
                    id: tree_view
                    size_hint: 1, 1
            
            DesignerTabbedPanelItem:
                text: 'Toolbox'
                Toolbox:
                    id: toolbox

<Designer>:
    statusbar: statusbar
    actionbar: actionbar

    ActionBar:
        id: actionbar
        pos_hint: {'top': 1}
        on_height: root.on_actionbar_height()
        size_hint: 1, None
        height: '55sp'
        ActionView:
            ActionPrevious:
                title: 'Kivy Designer'
                width: 200
                with_previous: False
            ActionOverflow:
            ActionGroup:
                text: 'File'
                mode: 'spinner'
                size_hint_x: None
                width: 90
                ActionButton:
                    text: 'New'
                    on_press: root.action_btn_new_pressed()
                ActionButton:
                    text: 'Open'
                    on_press: root.action_btn_open_pressed()
                ActionButton:
                    text: 'Save'
                    on_press: root.action_btn_save_pressed()
                ActionButton:
                    text: 'Save As'
                    on_press: root.action_btn_save_as_pressed()
                ActionButton:
                    text: 'Recent Files'
                    on_press: root.action_btn_recent_files_pressed()
                ActionButton:
                    text: 'Settings'
                    on_press: root.action_btn_settings_pressed()
                ActionButton:
                    text: 'Quit'
                    on_press: root.action_btn_quit_pressed()

            ActionGroup:
                text: 'View'
                mode: 'spinner'
                size_hint_x: None
                width: 90
                ActionCheckButton:
                    text: 'Project Tree and Toolbox'
                    minimum_width: 200
                    on_active: root.action_chk_btn_toolbox_active(self)
                ActionCheckButton:
                    text: 'Property Viewer'
                    minimum_width: 150
                    on_active: root.action_chk_btn_property_viewer_active(self)
                ActionCheckButton:
                    text: 'Widget Tree'
                    minimum_width: 150
                    on_active: root.action_chk_btn_widget_tree_active(self)
                ActionCheckButton:
                    text: 'StatusBar'
                    minimum_width: 150
                    on_active: root.action_chk_btn_status_bar_active(self)
                ActionCheckButton:
                    text: 'KV Area'
                    minimum_width: 150
                    on_active: root.action_chk_btn_kv_area_active(self)

            ActionGroup:
                text: 'Project'
                mode: 'spinner'
                size_hint_x: None
                width: 90
                ActionButton:
                    text: 'Add File'
                    minimum_width: 150
                    on_press: root.action_btn_add_file_pressed()
                
                ActionButton:
                    text: 'Project Preferences'
                    minimum_width: 150
                    on_press: root.action_btn_project_pref_pressed()

            ActionGroup:
                text: 'Run'
                mode: 'spinner'
                size_hint_x: None
                width: 90

                ActionButton:
                    text: 'Run Project'
                    minimum_width: 150
                    on_press: root.action_btn_run_project_pressed()

    StatusBar:
        id: statusbar
        size_hint_y: None
        on_height: root.on_statusbar_height()
        height: '20pt'
        pos_hint: {'y': 0}
